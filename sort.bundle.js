"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktodolist"] = self["webpackChunktodolist"] || []).push([["sort"],{

/***/ "./node_modules/date-fns/esm/_lib/defaultOptions/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/defaultOptions/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultOptions: () => (/* binding */ getDefaultOptions),\n/* harmony export */   setDefaultOptions: () => (/* binding */ setDefaultOptions)\n/* harmony export */ });\nvar defaultOptions = {};\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\nfunction setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n\n//# sourceURL=webpack://todolist/./node_modules/date-fns/esm/_lib/defaultOptions/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ requiredArgs)\n/* harmony export */ });\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\n\n//# sourceURL=webpack://todolist/./node_modules/date-fns/esm/_lib/requiredArgs/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/toInteger/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/toInteger/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toInteger)\n/* harmony export */ });\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\n//# sourceURL=webpack://todolist/./node_modules/date-fns/esm/_lib/toInteger/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameMonth/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameMonth/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSameMonth)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nfunction isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(2, arguments);\n  var dateLeft = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateLeft);\n  var dateRight = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}\n\n//# sourceURL=webpack://todolist/./node_modules/date-fns/esm/isSameMonth/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameWeek/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameWeek/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSameWeek)\n/* harmony export */ });\n/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfWeek/index.js */ \"./node_modules/date-fns/esm/startOfWeek/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nfunction isSameWeek(dirtyDateLeft, dirtyDateRight, options) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(2, arguments);\n  var dateLeftStartOfWeek = (0,_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateLeft, options);\n  var dateRightStartOfWeek = (0,_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\n\n//# sourceURL=webpack://todolist/./node_modules/date-fns/esm/isSameWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/startOfWeek/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/esm/startOfWeek/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ startOfWeek)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ \"./node_modules/date-fns/esm/_lib/toInteger/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n/* harmony import */ var _lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/defaultOptions/index.js */ \"./node_modules/date-fns/esm/_lib/defaultOptions/index.js\");\n\n\n\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var defaultOptions = (0,_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultOptions)();\n  var weekStartsOn = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n//# sourceURL=webpack://todolist/./node_modules/date-fns/esm/startOfWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/toDate/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/toDate/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toDate)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || (0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}\n\n//# sourceURL=webpack://todolist/./node_modules/date-fns/esm/toDate/index.js?");

/***/ }),

/***/ "./src/addEventModal.js":
/*!******************************!*\
  !*** ./src/addEventModal.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildModalButton: () => (/* binding */ buildModalButton),\n/* harmony export */   changeModalDisplay: () => (/* binding */ changeModalDisplay),\n/* harmony export */   \"default\": () => (/* binding */ buildEventModal)\n/* harmony export */ });\n/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localStorage */ \"./src/localStorage.js\");\n/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sort */ \"./src/sort.js\");\n\n\n\n\n// I build a modal that creates a new event using\n// a form to collect needed info\n\nfunction buildEventModal() {\n\n    const content = document.getElementById(\"content\");\n\n    // Builds the dialog modal\n    const dialogContainer = document.createElement(\"div\");\n    dialogContainer.style.display = \"none\";\n    dialogContainer.id = \"dialogContainer\";\n    content.appendChild(dialogContainer);\n\n    const gridContainer = document.createElement(\"div\");\n    gridContainer.id = \"gridContainer\";\n    dialogContainer.appendChild(gridContainer);\n\n    const title = document.createElement(\"p\");\n    title.textContent = \"New Event\";\n    gridContainer.appendChild(title);\n\n    const form = document.createElement(\"form\");\n    form.id = \"addEventDialog\";\n    gridContainer.appendChild(form);\n\n    // Input for event title\n    const event = document.createElement(\"input\");\n    event.id = \"eventInput\";\n    event.className = \"input event-input\";\n    event.setAttribute(\"type\", \"text\");\n    event.setAttribute(\"placeholder\", \"Event name\");\n    event.setAttribute(\"required\", \"required\");\n\n    // Label for event input\n    const eventLabel = document.createElement(\"label\");\n    eventLabel.textContent = \"Event: \";\n    eventLabel.setAttribute(\"for\", \"eventInput\");\n    eventLabel.classList.add(\"underline\");\n    form.appendChild(eventLabel);\n    form.appendChild(event);\n\n    // Input for event due date\n    const dueDate = document.createElement(\"input\");\n    dueDate.id = \"dueDateInput\";\n    dueDate.className = \"input due-date-input\";\n    dueDate.setAttribute(\"type\", \"date\");\n    dueDate.setAttribute(\"required\", \"required\");\n\n    // Label for dueDate input\n    const dueDateLabel = document.createElement(\"label\");\n    dueDateLabel.textContent = \"Due date: \";\n    dueDateLabel.setAttribute(\"for\", \"dueDateInput\");\n    dueDateLabel.classList.add(\"underline\");\n    form.appendChild(dueDateLabel);\n    form.appendChild(dueDate);\n\n    // Input for event priority\n    const priority = document.createElement(\"select\");\n    priority.id = \"priorityInput\";\n    priority.className = \"input priority-input\";\n    priority.required = true;\n\n    // Label for priority input\n    const priorityLabel = document.createElement(\"label\");\n    priorityLabel.textContent = \"Priority: \";\n    priorityLabel.setAttribute(\"for\", \"priorityInput\");\n    priorityLabel.classList.add(\"underline\");\n    form.appendChild(priorityLabel);\n    form.appendChild(priority);\n\n    // Priority options\n    let options = [\"Low\", \"Medium\", \"High\"];\n\n    // Adds each option to the select dropdown\n    for (const answer of options) {\n        let option = document.createElement(\"option\");\n        option.value = answer;\n        option.textContent = answer;\n        priority.appendChild(option);\n    }\n\n    // Input for additional notes\n    const notes = document.createElement(\"input\");\n    notes.id = \"notesInput\";\n    notes.className = \"input notes-input\";\n    notes.setAttribute(\"type\", \"text\");\n    notes.setAttribute(\"placeholder\", \"Notes (optional)\");\n\n    // Label for notes input\n    const notesLabel = document.createElement(\"label\");\n    notesLabel.textContent = \"Notes: \";\n    notesLabel.setAttribute(\"for\", \"notesInput\");\n    notesLabel.classList.add(\"underline\");\n    form.appendChild(notesLabel);\n    form.appendChild(notes);\n\n    // Confirm button\n    const confirm = document.createElement(\"button\");\n    confirm.type = \"submit\";\n    confirm.id = \"confirm\";\n    confirm.textContent = \"Add event\";\n    gridContainer.appendChild(confirm);\n\n    // Confirms event with input in modal\n    confirm.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n\n        if (!notes.value) {\n            notes.value = \"No notes\";\n        }\n\n        // Adds event to local storage\n        (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(event.value, dueDate.value, priority.value, notes.value);\n\n        // Clears all inputs for modal\n        clearModalInputs();\n\n        // Hides the modal\n        changeModalDisplay(dialogContainer);\n\n        // Changes buttons text content from confirm to +\n        document.querySelector(\"#addButton\").textContent = \"+\";\n\n        const todoSection = document.querySelector(\".todoSection\"); // Select the todo section\n        (0,_sort__WEBPACK_IMPORTED_MODULE_1__.sort)(todoSection.id);\n    });\n}\n\n// Builds modal button and changes content when clicked\nfunction buildModalButton(placementLocation, modalLocation) {\n    const addButton = document.createElement(\"button\");\n    addButton.id = \"addButton\";\n    addButton.textContent = \"+\";\n    placementLocation.appendChild(addButton);\n    addButton.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n\n        // Displays modal when the + button is clicked\n        (0,_sort__WEBPACK_IMPORTED_MODULE_1__.clearTodoSection)();\n        changeModalDisplay(modalLocation);\n        addButton.textContent =\n            modalLocation.style.display === \"block\" ? \"x\" : \"+\";\n    });\n}\n\n// Changes the display of the modal based on its current state\nfunction changeModalDisplay(modal) {\n    if (modal.style.display == \"none\") {\n        modal.style.display = \"block\";\n    } else {\n        modal.style.display = \"none\";\n    }\n}\n\n// Clears the inputs of the modal\nfunction clearModalInputs() {\n\n    // Selects all inputs in the dialog container to be cleared\n    const inputs = document.querySelectorAll(\"#dialogContainer input\");\n    inputs.forEach((input) => {\n        input.value = \"\";\n    });\n\n    // Resets the select drop down for urgency\n    const selects = document.querySelectorAll(\"#dialogContainer select\");\n    selects.forEach((select) => {\n        select.selectedIndex = 0;\n    });\n}\n\n\n\n\n//# sourceURL=webpack://todolist/./src/addEventModal.js?");

/***/ }),

/***/ "./src/event.js":
/*!**********************!*\
  !*** ./src/event.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Event)\n/* harmony export */ });\n// Builds an event with the input from the add event modal\nclass Event {\n    constructor(name, date, priority, notes, complete = false) {\n        this._name = name;\n        this._date = date;\n        this._priority = priority;\n        this._notes = notes;\n        this._complete = complete;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get date() {\n        return this._date;\n    }\n\n    get priority() {\n        return this._priority;\n    }\n\n    get notes() {\n        return this._notes;\n    }\n\n    get complete() {\n        return this._complete;\n    }\n}\n\n\n//# sourceURL=webpack://todolist/./src/event.js?");

/***/ }),

/***/ "./src/localStorage.js":
/*!*****************************!*\
  !*** ./src/localStorage.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ addEventLocal),\n/* harmony export */   deleteEvent: () => (/* binding */ deleteEvent),\n/* harmony export */   retrieveLocalEvents: () => (/* binding */ retrieveLocalEvents),\n/* harmony export */   storageAvailable: () => (/* binding */ storageAvailable),\n/* harmony export */   toggleCompleteStatus: () => (/* binding */ toggleCompleteStatus)\n/* harmony export */ });\n/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event */ \"./src/event.js\");\n/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sort */ \"./src/sort.js\");\n\n\n\n// Adds and sorts new event to local storage after the \"add event\"\n// button is clicked\nfunction addEventLocal(\n    event,\n    dueDate,\n    priority,\n    notes,\n    complete\n) {\n    if (storageAvailable(\"localStorage\")) {\n        let storedEvents = localStorage.getItem(\"events\");\n        const newEvent = new _event__WEBPACK_IMPORTED_MODULE_0__[\"default\"](event, dueDate, priority, notes);\n        if (!storedEvents) {\n            storedEvents = [newEvent];\n        } else {\n            storedEvents = JSON.parse(storedEvents);\n            storedEvents.push(newEvent);\n        }\n        storedEvents.sort((a, b) => new Date(a._date) - new Date(b._date));\n        localStorage.setItem(\"events\", JSON.stringify(storedEvents));\n    }\n}\n// Function that detects whether localStorage is both supported and available\nfunction storageAvailable(type) {\n    let storage;\n    try {\n        storage = window[type];\n        const x = \"__storage_test__\";\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    } catch (e) {\n        return (\n            e instanceof DOMException &&\n            // everything except Firefox\n            (e.code === 22 ||\n                // Firefox\n                e.code === 1014 ||\n                // test name field too, because code might not be present\n                // everything except Firefox\n                e.name === \"QuotaExceededError\" ||\n                // Firefox\n                e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            storage &&\n            storage.length !== 0\n        );\n    }\n}\n// Removes an event from localStorage\n// Used to remove events before being marked complete\nfunction toggleCompleteStatus(newEvent) {\n    let events = retrieveLocalEvents(\"events\");\n    const todoSection = document.querySelector(\".todoSection\");\n    for (let event of events) {\n        if (event._name === newEvent._name && event._date === newEvent._date) {\n            event._complete = !event._complete;\n        }\n    }\n    localStorage.setItem(\"events\", JSON.stringify(events));\n    (0,_sort__WEBPACK_IMPORTED_MODULE_1__.sort)(todoSection.id);\n}\n\nfunction retrieveLocalEvents(itemName) {\n    let eventsString = localStorage.getItem(`${itemName}`);\n    let events = JSON.parse(eventsString);\n    return events;\n}\n\nfunction deleteEvent(myEvent) {\n    let events = retrieveLocalEvents(\"events\");\n    const todoSection = document.querySelector(\".todoSection\");\n    for (let i = 0; i < events.length; i++) {\n        if (\n            events[i]._name === myEvent._name &&\n            events[i]._date === myEvent._date\n        ) {\n            events.splice(i, 1);\n            break;\n        }\n    }\n    localStorage.setItem(\"events\", JSON.stringify(events));\n    (0,_sort__WEBPACK_IMPORTED_MODULE_1__.sort)(todoSection.id);\n}\n\n\n//# sourceURL=webpack://todolist/./src/localStorage.js?");

/***/ }),

/***/ "./src/sort.js":
/*!*********************!*\
  !*** ./src/sort.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearTodoSection: () => (/* binding */ clearTodoSection),\n/* harmony export */   \"default\": () => (/* binding */ buildSortSection),\n/* harmony export */   sort: () => (/* binding */ sort)\n/* harmony export */ });\n/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localStorage */ \"./src/localStorage.js\");\n/* harmony import */ var _todo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./todo */ \"./src/todo.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isSameWeek/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isSameMonth/index.js\");\n/* harmony import */ var _addEventModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./addEventModal */ \"./src/addEventModal.js\");\n\n\n\n\n// Import necessary functions and libraries\n\n// Function to build sorting section in the UI\nfunction buildSortSection() {\n\n    const content = document.getElementById(\"content\");\n\n    const sortSection = document.createElement(\"div\"); // Create a div for the sort section\n    sortSection.id = \"sortSection\"; // Assign an ID to the sort section\n\n    content.appendChild(sortSection); // Append the sort section to the content section\n\n    // Add a paragraph for displaying \"Todo\" text\n    const todoText = document.createElement(\"h1\");\n    todoText.textContent = \"Tyler's Todo Manager\";\n    todoText.classList.add(\"sidebar-text\");\n    sortSection.appendChild(todoText);\n\n    // Create a div for sorting by date and add it to the sort section\n    const sortByDateSection = document.createElement(\"div\");\n    sortByDateSection.classList.add(\"by-date\");\n    sortSection.appendChild(sortByDateSection);\n\n    // Create and setup the \"Today\" button\n    const todayButton = document.createElement(\"button\");\n    todayButton.textContent = \"Today\";\n    todayButton.classList.add(\"sidebar-button\");\n    todayButton.addEventListener(\"click\", () => sort(\"today\"));\n    sortByDateSection.appendChild(todayButton);\n\n    // Create and setup the \"This week\" button\n    const weekButton = document.createElement(\"button\");\n    weekButton.textContent = \"This week\";\n    weekButton.classList.add(\"sidebar-button\");\n    weekButton.addEventListener(\"click\", () => sort(\"week\"));\n    sortByDateSection.appendChild(weekButton);\n\n    // Create and setup the \"This month\" button\n    const monthButton = document.createElement(\"button\");\n    monthButton.textContent = \"This month\";\n    monthButton.classList.add(\"sidebar-button\");\n    monthButton.addEventListener(\"click\", () => sort(\"month\"));\n    sortByDateSection.appendChild(monthButton);\n\n    // Create a div for sorting by completion status and add it to the sort section\n    const sortByCompletionSection = document.createElement(\"div\");\n    sortByCompletionSection.classList.add(\"by-completion\");\n    sortSection.appendChild(sortByCompletionSection);\n\n    // Create and setup the \"Complete\" button\n    const completeButton = document.createElement(\"button\");\n    completeButton.textContent = \"Completed\";\n    completeButton.classList.add(\"sidebar-button\");\n    completeButton.addEventListener(\"click\", () => sort(\"complete\"));\n    sortByCompletionSection.appendChild(completeButton);\n\n    // Create and setup the \"Incomplete\" button\n    const incompleteButton = document.createElement(\"button\");\n    incompleteButton.textContent = \"Incomplete\";\n    incompleteButton.classList.add(\"sidebar-button\");\n    incompleteButton.addEventListener(\"click\", () => sort(\"incomplete\"));\n    sortByCompletionSection.appendChild(incompleteButton);\n\n    const modal = document.querySelector(\"#dialogContainer\");\n    (0,_addEventModal__WEBPACK_IMPORTED_MODULE_2__.buildModalButton)(sortSection, modal);\n}\n\n// Function to clear the todo section\nfunction clearTodoSection() {\n    const todoSection = document.querySelector(\".todoSection\");\n    todoSection.textContent = \"\"; // Clear the content of the todo section\n}\n\n// Function to sort events based on different criteria\nfunction sort(criteria) {\n    clearTodoSection(); // Clear the existing todo items\n    if (document.getElementById(\"dialogContainer\").style.display === \"block\") {\n        (0,_addEventModal__WEBPACK_IMPORTED_MODULE_2__.changeModalDisplay)(document.getElementById(\"dialogContainer\"));\n        document.getElementById(\"addButton\").textContent = \"+\";\n    }\n    let events = (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__.retrieveLocalEvents)(\"events\"); // Retrieve events from local storage\n    let today = new Date(); // Get the current date\n    const todoSection = document.querySelector(\".todoSection\"); // Select the todo section\n\n    switch (criteria) {\n        case \"today\":\n            // Filter and display events for today\n            events.forEach((event) => {\n                if (\n                    event._date === today.toLocaleDateString(\"en-CA\") &&\n                    event._complete === false\n                ) {\n                    (0,_todo__WEBPACK_IMPORTED_MODULE_1__.buildTodoEvent)(event);\n                    todoSection.id = \"today\";\n                }\n            });\n            break;\n        case \"week\":\n            // Filter and display events for this week\n            events.forEach((event) => {\n                let eventDate = new Date(event._date);\n                if ((0,date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(today, eventDate) && event._complete === false) {\n                    (0,_todo__WEBPACK_IMPORTED_MODULE_1__.buildTodoEvent)(event);\n                    todoSection.id = \"week\";\n                }\n            });\n            break;\n        case \"month\":\n            // Filter and display events for this month\n            events.forEach((event) => {\n                let eventDate = new Date(event._date);\n                if (\n                    (0,date_fns__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(today, eventDate) &&\n                    event._complete === false\n                ) {\n                    (0,_todo__WEBPACK_IMPORTED_MODULE_1__.buildTodoEvent)(event);\n                    todoSection.id = \"month\";\n                }\n            });\n            break;\n        case \"complete\":\n            // Filter and display completed events\n            events.forEach((event) => {\n                if (event._complete) {\n                    (0,_todo__WEBPACK_IMPORTED_MODULE_1__.buildTodoEvent)(event);\n                    todoSection.id = \"complete\";\n                }\n            });\n            const completedEvents = document.querySelectorAll(\".complete-button\");\n            for (let event of completedEvents) {\n                event.textContent = event.textContent === \"Complete\" ? \"Undo\" : \"Complete\";\n            }\n            break;\n        case \"incomplete\":\n            // Filter and display incomplete events\n            events.forEach((event) => {\n                if (!event._complete) {\n                    (0,_todo__WEBPACK_IMPORTED_MODULE_1__.buildTodoEvent)(event);\n                    todoSection.id = \"incomplete\";\n                }\n            });\n            break;\n    }\n}\n\n\n//# sourceURL=webpack://todolist/./src/sort.js?");

/***/ }),

/***/ "./src/todo.js":
/*!*********************!*\
  !*** ./src/todo.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildTodoEvent: () => (/* binding */ buildTodoEvent),\n/* harmony export */   \"default\": () => (/* binding */ buildTodoSection)\n/* harmony export */ });\n/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event */ \"./src/event.js\");\n/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localStorage */ \"./src/localStorage.js\");\n // Import the Event class\n // Import function to toggle completion status of an event\n\n// Function to create the main todo section in the UI\nfunction buildTodoSection() {\n\n    const content = document.getElementById(\"content\");\n\n    const todoSection = document.createElement(\"div\"); // Create a div element for the todo section\n    todoSection.classList.add(\"todoSection\"); // Add a class for styling\n    content.appendChild(todoSection); // Append the todo section to the specified location\n}\n\n// Function to build and display an individual todo event\nfunction buildTodoEvent(eventInfo) {\n    let myEvent = new _event__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n        eventInfo._name,\n        eventInfo._date,\n        eventInfo._priority,\n        eventInfo._notes\n    ); // Create a new Event instance\n\n    const todoSection = document.querySelector(\".todoSection\"); // Select the todo section\n\n    const eventDiv = document.createElement(\"div\"); // Create a div to hold the event information\n    eventDiv.classList.add(\"event-Div\"); // Add a class for styling\n    todoSection.appendChild(eventDiv); // Append the event div to the todo section\n\n    const eventTitle = document.createElement(\"p\"); // Create a paragraph for the event title\n    eventTitle.classList.add(\"event-title\"); // Add a class for styling\n    eventTitle.innerHTML = `<p class=\"eventP\"><span class=\"underline title\">Todo:</span> ${eventInfo._name}</p>`; // Set the text content to the event name\n    eventDiv.appendChild(eventTitle); // Append the title to the event div\n\n    const eventDueDate = document.createElement(\"p\"); // Create a paragraph for the event due date\n    eventDueDate.classList.add(\"event-due-date\"); // Add a class for styling\n    eventDueDate.innerHTML = `<p class=\"eventP\"><span class=\"underline title\">Date:</span> ${eventInfo._date}</p>`; // Set the text content to the event due date\n    eventDiv.appendChild(eventDueDate); // Append the due date to the event div\n\n    const eventNotes = document.createElement(\"p\"); // Create a paragraph for the event notes\n    eventNotes.classList.add(\"event-notes\"); // Add a class for styling\n    eventNotes.innerHTML = `<p class=\"eventP\"><span class=\"underline title\">Notes:</span> ${eventInfo._notes}</p>`; // Set the text content to the event notes\n    eventDiv.appendChild(eventNotes); // Append the notes to the event div\n\n    const eventPriority = document.createElement(\"p\"); // Create a paragraph for the event priority\n    eventPriority.classList.add(\"event-priority\"); // Add a class for styling\n    eventPriority.innerHTML = `<p class=\"eventP\"><span class=\"underline title\">Priority:</span> ${eventInfo._priority}</p>`; // Set the text content to the event priority\n    eventDiv.appendChild(eventPriority); // Append the priority to the event div\n\n    const completeButton = document.createElement(\"button\"); // Create a button to toggle completion status\n    completeButton.textContent = \"Complete\";\n    completeButton.classList.add(\"complete-button\")\n    completeButton.addEventListener(\"click\", () => {\n        ;(0,_localStorage__WEBPACK_IMPORTED_MODULE_1__.toggleCompleteStatus)(myEvent); // Add event listener to toggle the status when clicked\n    });\n    eventDiv.appendChild(completeButton); // Append the button to the event div\n\n    const deleteButton = document.createElement(\"button\"); //Create a button to delete an event\n    deleteButton.textContent = \"Delete\";\n    deleteButton.classList.add(\"delete-button\");\n    deleteButton.addEventListener(\"click\", () => {\n        (0,_localStorage__WEBPACK_IMPORTED_MODULE_1__.deleteEvent)(myEvent); // Add event listener to delete the selected event\n    });\n    eventDiv.appendChild(deleteButton); // Append the button to the event div\n}\n\n\n//# sourceURL=webpack://todolist/./src/todo.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\n//# sourceURL=webpack://todolist/./node_modules/@babel/runtime/helpers/esm/typeof.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/sort.js"));
/******/ }
]);